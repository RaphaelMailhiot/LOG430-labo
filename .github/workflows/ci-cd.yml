# .github/workflows/ci-cd.yml
name: CI/CD

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: üîç Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: ESLint
        run: npx eslint "src/**/*.{js,jsx,ts,tsx}"
  
  test:
    name: üß™ Tests unitaires
    runs-on: ubuntu-latest
    needs: lint

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379

    env:
      NODE_ENV: test
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: user
      DB_PASSWORD: password
      DB_NAME: db
      PORT: 3000

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Installer les d√©pendances
        run: npm ci

      - name: Build du projet
        run: npm run build

      - name: Attendre que PostgreSQL soit pr√™t
        run: |
          until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME; do
            echo "En attente de la BDD‚Ä¶"
            sleep 2
          done

      - name: Lancer les tests en s√©rie
        # --runInBand emp√™che Jest de lancer plusieurs workers simultan√©ment
        run: npm test -- --runInBand --detectOpenHandles


  build:
    name: üèóÔ∏è Build Docker
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build image
        run: |
          docker build \
            --file Dockerfile \
            --tag ${{ secrets.DOCKER_USERNAME }}/log430-labo:${{ github.sha }} \
            --tag ${{ secrets.DOCKER_USERNAME }}/log430-labo:latest \
            .

  publish:
    name: üöÄ Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: raphaelmailhiot/log430-labo

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/log430-labo:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/log430-labo:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/raphaelmailhiot/log430-labo
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true